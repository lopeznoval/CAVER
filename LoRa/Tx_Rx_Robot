#!/usr/bin/python3
# -*- coding: UTF-8 -*-

import time
import serial
import json
import threading
from sx126x import sx126x

# Configuración LoRa
#SERIAL_PORT_LORA = "/dev/ttyAMA10"
SERIAL_PORT_LORA = "/dev/ttyUSB0"
FREQUENCY = 433
NODE_ADDRESS = 2     # Dirección de la Raspberry
POWER = 0            # Dirección de la EB
EB_ADDRESS = 20
RELAY_BIT = 1
TYPE_MSG = 1
ID_MSG = 0

# Configuración del robot (conexión por cable)
SERIAL_PORT_ROBOT = "/dev/ttyACM0"  # o /dev/ttyUSB1 según tu conexión
BAUDRATE_ROBOT = 115200

def enviar_al_pc(lora, message):
    """Envía por LoRa un mensaje de texto al PC."""
    packet = bytes([
        EB_ADDRESS >> 8,
        EB_ADDRESS & 0xFF,
        NODE_ADDRESS >> 8,
        NODE_ADDRESS & 0xFF,
        RELAY_BIT | (TYPE_MSG & 0x7F),
        ID_MSG & 0xFF
    ]) + message.encode('utf-8', errors='ignore')
    lora.send(packet)
    print(f"Enviado a PC → {message}")

def escuchar_robot(robot, lora):
    "Hilo para escuchar respuestas del robot"
    while True:
        if robot.in_waiting > 0:
            try: 
                response = robot.readline().decode('utf-8').strip()
                if response:
                    print(f"Respuesta del robot: {response}")
                    enviar_al_pc(lora, response)
            except Exception as e:
                print(f"Error leyendo del robot: {e}")
        time.sleep(0.05)

def main():
    lora = sx126x(serial_num=SERIAL_PORT_LORA, freq=FREQUENCY, addr=NODE_ADDRESS, power=POWER, rssi=True)
    robot = serial.Serial(SERIAL_PORT_ROBOT, BAUDRATE_ROBOT, timeout=1)

    print(f"Listening on LoRa {NODE_ADDRESS} @ {FREQUENCY}MHz")
    print("Conectado al robot en", SERIAL_PORT_ROBOT)
    
    # Crear hilo para escuchar al robot
    robot_thread = threading.Thread(target=escuchar_robot, args=(robot,lora), daemon=True)
    robot_thread.start()
    
    while True:
        if lora.ser.in_waiting > 0:
            time.sleep(0.5)
            data = lora.ser.read(lora.ser.in_waiting)
            if len(data) < 8:
                continue

            if len(data) > 0:
                print(f"Ha llegado algo: {data}")
                
            dest = (data[0] << 8) | data[1]
            src  = (data[2] << 8) | data[3]
            msg_type = data[4]
            msg_id = data[5]
            body = data[6:]

            if dest != NODE_ADDRESS:
                continue  # mensaje no es para esta Raspi

            try:
                cmd = body.decode('utf-8')
                print(f"From {src} → Comando: {cmd}")
                robot.write(cmd.encode() + b'\n')
            except Exception as e:
                print(f"Error decoding JSON: {e}")

        time.sleep(0.1)

if __name__ == "__main__":
    main()
